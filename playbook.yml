---
- name: setup
  hosts: localhost
  vars: {}

  tasks:
    - name: Check dockutil file exists
      stat:
        path: /Users/{{ lookup('env', 'USER') }}/dockutil-3.0.2.pkg
      register: dockutil_file_check

    - name: Check dockutil installation
      stat:
        path: /usr/local/bin/dockutil
      register: dockutil_folder_check

    - name: Download dockutil
      when:
        - not dockutil_file_check.stat.exists
        - not dockutil_folder_check.stat.exists
      get_url:
        url: https://github.com/kcrawford/dockutil/releases/download/3.0.2/dockutil-3.0.2.pkg
        dest: /Users/{{ lookup('env', 'USER') }}

    - name: Install package
      when: not dockutil_folder_check.stat.exists
      become: true
      shell: /usr/sbin/installer -pkg /Users/{{ lookup('env', 'USER') }}/dockutil-3.0.2.pkg -target /

    - name: Remove file
      when: dockutil_folder_check.stat.exists
      file:
        path: /Users/{{ lookup('env', 'USER') }}/dockutil-3.0.2.pkg
        state: absent

    - name: Update homebrew
      become_user: root
      community.general.homebrew:
        update_homebrew: true

    - name: Install tools with brew
      become_user: root
      community.general.homebrew:
        name: "{{ item }}"
        state: latest
      loop: "{{ brew }}"

    - name: Install tools with brew cask
      become_user: root
      community.general.homebrew_cask:
        name: "{{ item }}"
        state: present
      loop: "{{ cask }}"

    - name: Check if postgres exists
      stat:
        path: /Applications/Postgres.app
      register: folder_check

    - name: Download postgres
      when:
        - not folder_check.stat.exists
        - postgresAppVersion is defined
        - postgresVersion is defined
      get_url:
        url: https://github.com/PostgresApp/PostgresApp/releases/download/v{{ postgresAppVersion }}/Postgres-{{ postgresAppVersion }}-{{ postgresVersion }}.dmg
        dest: /Users/{{ lookup('env', 'USER') }}

    - name: Install postgres
      when:
        - not folder_check.stat.exists
        - postgresAppVersion is defined
        - postgresVersion is defined
      become: true
      shell: |
        hdiutil mount /Users/{{ lookup('env', 'USER') }}/Postgres-{{ postgresAppVersion }}-{{ postgresVersion }}.dmg
        cp -R /Volumes/Postgres-{{ postgresAppVersion }}-{{ postgresVersion }}/Postgres.app /Applications
        hdiutil unmount /Volumes/Postgres-{{ postgresAppVersion }}-{{ postgresVersion }}

    - name: Remove file
      when:
        - not folder_check.stat.exists
        - postgresAppVersion is defined
        - postgresVersion is defined
      file:
        path: /Users/{{ lookup('env', 'USER') }}/Postgres-{{ postgresAppVersion }}-{{ postgresVersion }}.dmg
        state: absent

    - name: Change python to python3
      replace:
        path: /Applications/Visual Studio Code.app/Contents/Resources/app/bin/code
        regexp: 'python(3)?'
        replace: 'python3'

    - name: Check if .oh-my-zsh exists
      stat:
        path: /Users/{{ lookup('env', 'USER') }}/.oh-my-zsh
      register: is_oh_my_zsh_present

    - name: Cloning oh-my-zsh
      git:
        repo: https://github.com/ohmyzsh/ohmyzsh.git
        dest: /Users/{{ lookup('env', 'USER') }}/.oh-my-zsh
      when: not is_oh_my_zsh_present.stat.exists

    - name: Set zshrc
      template:
        src: ./files/zshrc
        dest: /Users/{{ lookup('env', 'USER') }}/.zshrc
        owner: "{{ lookup('env', 'USER') }}"
        force: true

    - name: Change user shell to zsh
      become: true
      user:
        name: "{{ lookup('env', 'USER') }}"
        shell: /usr/local/bin/zsh

    - name: Install VSCode themes
      command: code --install-extension {{ item }}
      loop: "{{ vscodeThemes }}"

    - name: Install VSCode extensions
      command: code --install-extension {{ item }}
      loop: "{{ vscodeExtenstions }}"

    - name: Prepare repo folder
      file:
        path: /Users/{{ lookup('env', 'USER') }}/Documents/repo
        state: directory

    - name: Removing default dock icons
      command: dockutil --remove all

    - name: Set personal dock icons
      command: dockutil --add {{ item }}
      loop: "{{ dock }}"
      loop_control:
        pause: 10
